[gd_scene load_steps=13 format=2]

[ext_resource path="res://CharacterController.gd" type="Script" id=1]
[ext_resource path="res://assets/art/player/playerBlue_walk1.png" type="Texture" id=2]
[ext_resource path="res://assets/art/player/playerBlue_walk2.png" type="Texture" id=3]
[ext_resource path="res://assets/art/player/playerBlue_walk3.png" type="Texture" id=4]
[ext_resource path="res://assets/art/player/playerBlue_walk4.png" type="Texture" id=5]
[ext_resource path="res://assets/art/player/playerBlue_duck.png" type="Texture" id=6]
[ext_resource path="res://assets/sound/shoot.wav" type="AudioStream" id=7]
[ext_resource path="res://assets/sound/shot_charged.wav" type="AudioStream" id=8]
[ext_resource path="res://assets/sound/jump.wav" type="AudioStream" id=9]

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ ExtResource( 2 ) ],
"loop": true,
"name": "idle",
"speed": 5.0
}, {
"frames": [ ExtResource( 2 ), ExtResource( 3 ), ExtResource( 4 ), ExtResource( 4 ), ExtResource( 3 ) ],
"loop": true,
"name": "walk",
"speed": 15.0
}, {
"frames": [ ExtResource( 4 ), ExtResource( 5 ) ],
"loop": false,
"name": "fall",
"speed": 10.0
}, {
"frames": [ ExtResource( 4 ), ExtResource( 5 ), ExtResource( 6 ) ],
"loop": false,
"name": "duck",
"speed": 15.0
} ]

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 8.15434, 26.8801 )

[sub_resource type="GDScript" id=3]
script/source = "extends Node2D

# Editor values
export var shoot_cooldown: float = 0.1
export var burst_num: int = 3
export var burst_cooldown: float = 0.6
export var shot_charge_time: float = 0.8

# Scenes
var Bullet: PackedScene = preload(\"res://scenes/Bullet.tscn\")
var scene: Node2D
var player: CharacterController
var shoot_sound: AudioStreamPlayer2D
var shot_charged_sound: AudioStreamPlayer2D

# Constants
var offset

# Input state
var shoot_held: bool
var shoot_pressed: bool
var shoot_released: bool

# Shoot state
var shoot_hold_time: float = 0
var shoot_cooldown_timer: float = 0
var burst_counter: int = 0
var burst_cooldown_timer: float = 0

var shot_buffered: bool = false
var shot_charged: bool = false


func _ready() -> void:
    shoot_sound = $Shoot
    shot_charged_sound = $ShotCharged
    
    player = get_parent()
    scene = player.get_parent()
    
    offset = position


func _process(delta: float) -> void:
    # Manage shot timers
    if shoot_cooldown_timer != 0:
        shoot_cooldown_timer = max(shoot_cooldown_timer - delta, 0)
    if burst_cooldown_timer != 0:
        burst_cooldown_timer = max(burst_cooldown_timer - delta, 0)
    else:
        burst_counter = 0
  
    # Charge shot timer  
    if shoot_hold_time > shot_charge_time and shot_charged == false:
        shot_charged = true
        shot_charged_sound.play()
    
    # Action
    _get_input()

    if shoot_pressed or shot_buffered:
        var in_burst = burst_cooldown == 0 or burst_counter < burst_num
        
        if shoot_cooldown_timer == 0 and in_burst:
            # Manage cooldowns
            shoot_cooldown_timer = shoot_cooldown
            if burst_cooldown_timer == 0:
                burst_cooldown_timer = burst_cooldown
                burst_counter = 1
            else:
                burst_counter += 1
                if burst_cooldown / burst_counter > burst_cooldown_timer:
                    burst_cooldown_timer = burst_cooldown
                    burst_counter = 1
                
            shot_buffered = false
            
            # Shoot
            _shoot()
        else:
            shot_buffered = in_burst 
    elif shoot_held:
        shoot_hold_time += delta
    elif shoot_released:
        if shoot_hold_time > shot_charge_time:
            _shoot()
        shoot_hold_time = 0
        shot_charged = false
        


func _shoot() -> void:
    # Values needed for bullet
    var current_offset = offset
    var dir = player.dir
    current_offset.x *= dir

    # Create bullet
    var bullet = Bullet.instance()
    bullet.position = player.global_position + current_offset
    bullet.velocity.x *= player.dir
    scene.add_child(bullet)
    
    # Play sound
    shoot_sound.play()
    

func _get_input() -> void:
    shoot_held = Input.is_action_pressed(\"shoot\")
    shoot_pressed = Input.is_action_just_pressed(\"shoot\")
    shoot_released = Input.is_action_just_released(\"shoot\")
"

[node name="player" type="KinematicBody2D"]
collision/safe_margin = 0.01
script = ExtResource( 1 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
frames = SubResource( 1 )
animation = "idle"

[node name="BodyCollider" type="CollisionShape2D" parent="."]
position = Vector2( 0, -0.158424 )
shape = SubResource( 2 )

[node name="BulletSpawn" type="Node2D" parent="."]
editor/display_folded = true
position = Vector2( 15, -5 )
script = SubResource( 3 )

[node name="Shoot" type="AudioStreamPlayer" parent="BulletSpawn"]
stream = ExtResource( 7 )
volume_db = -15.0

[node name="ShotCharged" type="AudioStreamPlayer" parent="BulletSpawn"]
stream = ExtResource( 8 )
volume_db = -15.0

[node name="JumpSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 9 )
volume_db = -25.0
pitch_scale = 1.5

